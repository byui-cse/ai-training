version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: auction_db
      POSTGRES_USER: auction_user
      POSTGRES_PASSWORD: auction_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auction_user -d auction_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for future caching)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # Backend API
  backend:
    build:
      context: ..
      dockerfile: docker/backend.Dockerfile
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://auction_user:auction_password@db:5432/auction_db
      - REDIS_HOST=redis
      - TESTING=false
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../backend:/app
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Frontend (placeholder - to be implemented)
  # frontend:
  #   build:
  #     context: ..
  #     dockerfile: docker/frontend.Dockerfile
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - backend

volumes:
  postgres_data:
  redis_data:
